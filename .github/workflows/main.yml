name: 'main'

on: [push]

jobs:
  ros2setup:                                        #jobid
    runs-on: ubuntu-latest                          
    name: ros2setup
    steps:
#     - name: Checkout
#       uses: actions/checkout@v2
#     - name: test test
#       uses: ./test/
#     - name: linux test
#       uses: ./
#       id: hello
    - name: Setup ROS2
      uses: ros-tooling/setup-ros@0.0.15
      with: 
          required-ros-distributions: eloquent
    - name: ls3
      run: |
        source /opt/ros/eloquent/setup.bash
        export
        ros2 doctor --report
#     - run: | 
#         source /opt/ros/eloquent/setup.bash
#         ros2 run demo_nodes_cpp talker
#     timeout-minutes: 1
#                           - run: |
#        source /opt/ros/eloquent/setup.bash
#        ros2 run demo_nodes_cpp listener

# jobs: 
#   listener:
  talker:
    needs: ros2setup
    runs-on: ubuntu-latest
    name: talker
    steps:
      - run: |
          source /opt/ros/eloquent/setup.bash
          ros2 run demo_nodes_cpp talker
        timeout-minutes: 1
          
  listener:
    needs: [ros2setup]
    runs-on: [ubuntu-latest]
    name: listener
    steps:
      - run: |
          source /opt/ros/eloquent/setup.bash
          ros2 run demo_nodes_cpp listener
        timeout-minutes: 1
    



#     name: A job to say hello1
#     steps:
#     - run: |
#         source /opt/ros/eloquent/setup.bash
#         ros2 run demo_nodes_cpp talker
#         timeout-minutes: 1
   


#       uses: ros-tooling/action-ros-ci@0.0.13
#       with:
#         package-name: example_package

#     - name: Upload Logs
#       uses: actions/upload-artifact@v1
#       with:
#         name: colcon-logs
#         path: ros_ws/log
#       if: always()
#       with:
#         who-to-greet: 'Mona the Octocat'
#     # Use the output from the `hello` step
#     - name: Get the output time
#       run: echo "The time was ${{ steps.hello.outputs.time }}"
# runs:
#   using: 'docker'
#   image: 'Dockerfile'
