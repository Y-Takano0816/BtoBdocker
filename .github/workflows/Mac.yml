name: 'main'

on: [push]

# jobs:
#   hello_world_job:
#     runs-on: macos-latest
#     name: A job to say hello2
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v2
#     - name: test
#       run: echo test
#     - name: who
#       run: who
jobs:
  MacOS_talker_listener:                                        #jobid                          
#     strategy:
#       fail-fast: false
#       matrix:
#         os: [ubuntu-latest, windows-latest, macos-latest]
#       max-parallel: 3
#     runs-on: ${{ matrix.os }
    runs-on: [macos-latest]
    name: MacOS_talker_listener
    steps:
     - name: checkout
       uses: actions/checkout@v1
     - name: Setup ROS2
       uses: ros-tooling/setup-ros@0.0.15
       with: 
           required-ros-distributions: eloquent
     - name: install ROS2 for Mac
       run: |
         mkdir ros2_eloquent
         cd ros2_eloquent
         tar xf ../ros2-eloquent-20200124-macos-amd64.tar.bz2
     - name: tiny_gradedown
       run: |
         brew unlink tinyxml2
         brew install https://raw.githubusercontent.com/Homebrew/homebrew-core/da9a96f093a57eb8ac7c9470c1ec04fd1823a37a/Formula/tinyxml2.rb
         brew switch tinyxml2 6.2.0
     - name: talker&listener
       run: |
         . ros2_eloquent/ros2-osx/setup.bash
         ros2 run demo_nodes_cpp listener &
         ros2 run demo_nodes_cpp talker

#           echo step 1
#           pwd
#           echo ls -a
#           ls -a
#           echo 
#           echo step 2
#           cd /Users/runner/runners/2.1
#           echo pwd 2
#           pwd
#           echo 
#           echo step 3
#           echo cmd::cd /
#           cd /
#           echo ls -a
#           ls -a
#           echo cmd::ls /home
#           ls /home        
#           echo cmd:: cd home
#           cd /home/
#           sudo ls -a
#           echo pwdddddddddddddddddddddd
#           pwd
#           echo aaaaaaaaaaaaaaaaaaaaaaaaa
#           source ../opt/ros/eloquent/setup.bash
#       shell: sh  
#        continue-on-error: true  
#        timeout-minutes: 1 
#       ros2 run demo_nodes_cpp listener &
#         ros2 run demo_nodes_cpp talker
#       with:
#         who-to-greet: 'Mona the Octocat'
#     # Use the output from the `hello` step
#     - name: Get the output time
#       run: echo "The time was ${{ steps.hello.outputs.time }}"
# runs:
#   using: 'docker'
#   image: 'Dockerfile'
